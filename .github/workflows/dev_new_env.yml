name: dev_new_env_build

on: 
    workflow_dispatch:

env:
     SCRIBE_URL: "https://airflow.dev.scribesecurity.com/"
     SCRIBE_LOGIN_URL: "https://scribe-hub-dev.us.auth0.com"
     SCRIBE_AUDIENCE: "api.dev.scribesecurity.com"

jobs:

 scribe-report-test:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    
    
    steps:

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

#       - uses: actions/checkout@v3
#         with:
#           repository: mongo-express/mongo-express
#           ref: refs/tags/v1.0.0-alpha.4
#           path: mongo-express-scm

#       - name: Scm generate bom, upload to scribe
#         id: valint_bom_scm
#         uses: scribe-security/action-bom@master
#         with:
#            type: dir
#            target: 'mongo-express-scm'
#            scribe-enable: true
#            product-key: "000_verify_format attest"
#            scribe-client-id: ${{ secrets.SCRIBE_DEV_NEW_M2M_CLIENT_ID }}
#            scribe-client-secret: ${{ secrets.SCRIBE_DEV_NEW_M2M_CLIENT_SECRET }}
#            scribe-url: ${{ env.SCRIBE_URL }}
#            scribe-login-url: ${{ env.SCRIBE_LOGIN_URL }}
#            scribe-audience: ${{ env.SCRIBE_AUDIENCE }}

      # Build and push your image - this example skips this step as we're using the published mongo express.

      - name: Image generate bom, upload to scribe
        id: valint_bom_image
#         uses: scribe-security/action-bom@master
        uses: scribe-security/action-bom@dev
        with:
          type: docker # To be included only if you want to to use docker daemon to access the image (for example, creating your docker image locally)
          target: mongo-express:latest
          product-version: "mongo-express:latest_verify"
          pipeline-name: "pipeline2"
          format: attest-cyclonedx-json
          scribe-enable: true
          product-key: "000_25-05-23"
          scribe-client-id: ${{ secrets.SCRIBE_DEV_NEW_M2M_CLIENT_ID }}
          scribe-client-secret: ${{ secrets.SCRIBE_DEV_NEW_M2M_CLIENT_SECRET }}
          scribe-url: ${{ env.SCRIBE_URL }}
          scribe-login-url: ${{ env.SCRIBE_LOGIN_URL }}
          scribe-audience: ${{ env.SCRIBE_AUDIENCE }}
          
          
#          new code  - verify
      - uses: scribe-security/action-verify@master
        with:
          type: docker
          target: mongo-express:latest
          format: attest
          scribe-enable: true
          verbose: 2
          scribe-client-id: ${{ secrets.SCRIBE_PROD_CLIENT_ID }}
          scribe-client-secret: ${{ secrets.SCRIBE_PROD_CLIENT_SECRET }}
          product-key: "000_25-05-23" 

      - uses: actions/upload-artifact@v2
        with:
          name: scribe-reports
          path: |
            ${{ steps.valint_bom_scm.outputs.OUTPUT_PATH }}
            ${{ steps.valint_bom_image.outputs.OUTPUT_PATH }}
      

      - name: Generate SLSA provenance statement
        id: valint_slsa_statement
#         uses: scribe-security/action-bom@master
        uses: scribe-security/action-bom@dev
        with:
          target: mongo-express:latest
          format: statement-slsa
          product-key: "000_25-05-23"

      - uses: actions/upload-artifact@v2
        with:
         name: provenance
         path: ${{ steps.valint_slsa_statement.outputs.OUTPUT_PATH }}


  

       
          
 
       
